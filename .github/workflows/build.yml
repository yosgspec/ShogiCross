name: Build and Deploy

on:
  push:
    branches:
      - main
    tags:
      - "*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: ライブラリバージョン
        required: false

# GitHub Pagesデプロイ権限
permissions:
  contents: read
  pages: write
  id-token: write

# 同時実行制御：GitHub Pagesのデプロイが重複しないように
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Setup NPM Modules
        run: npm install

      - name: Setup ShogiCross Module
        run: npm run setup

      - name: Build ShogiCross Module
        run: npm run building

      - name: Collect ShogiCross Module
        run: npm run collect

      - name: Minify ShogiCross Module
        run: npm run minify

      - name: Post ShogiCross Module
        run: npm run post

      - name: Deploy API Document
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 5
          retry_on: error
          command: npm run deploy:doc-api

      - name: Upload Source Artifact
        uses: actions/upload-artifact@v4
        with:
          name: src
          path: src

  DeployPublish:
    needs: Build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/

      - name: Download Module Artifact
        uses: actions/download-artifact@v4
        with:
          name: src
          path: src

      - name: Update package.json Version
        run: npm version --no-git-tag-version ${GITHUB_REF#refs/tags/}

      - name: Publish NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  DeployPages:
    needs: Build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/')
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: Download Source Artifact
        uses: actions/download-artifact@v4
        with:
          name: src
          path: src

      - name: Upload GitHub Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: src

      - name: Deploy GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4