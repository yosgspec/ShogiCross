name: Create and Push Tag from package.json (if-conditional)

on:
  push:
    branches:
      - act

jobs:
  tag-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get ShogiCross Version
        id: PROJECT_VERSION
        run: echo "value=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      # 4. リモートリポジトリにタグが存在するかチェックするステップ
      - name: Check if tag exists
        id: TRY_EXISTS_TAG
        continue-on-error: true
        run: |
          TAG_NAME="${{steps.PROJECT_VERSION.outputs.value}}"
          echo "Checking for tag ${TAG_NAME}..."
          git ls-remote --tags origin | grep -q "refs/tags/${TAG_NAME}"

      # 5. タグが存在しない場合 (check_tagが失敗した場合) にタグを作成
      - name: Create and Push Tag
        if: steps.TRY_EXISTS_TAG.outcome != 'success'
        run: |
          TAG_NAME="test-${{steps.PROJECT_VERSION.outputs.value}}"
          echo "Tag does not exist. Creating and pushing tag ${TAG_NAME}."
          echo "Debug: steps.TRY_EXISTS_TAG.outcome is ${{ steps.TRY_EXISTS_TAG.outcome }}"
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git tag $TAG_NAME
          git push origin $TAG_NAME

      # 6. タグが既に存在する場合 (check_tagが成功した場合) にメッセージを表示
      - name: Log that tag already exists
        if: steps.TRY_EXISTS_TAG.outcome == 'success'
        run: |
          TAG_NAME="${{ steps.PROJECT_VERSION.outputs.value }}"
          echo "Tag ${TAG_NAME} already exists. Skipping creation."