name: Deploy Cloud Run

on:
  push:
    branches:
      - main

jobs:
  CheckServerUpdate:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      IS_UPDATE: ${{steps.TRY_DIFF_PROJECT.outcome == 'success'}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Try Diff package.json
        id: TRY_DIFF_PROJECT
        continue-on-error: true
        run: |
          FILE="server/package.json"
          # 最新コミットと1つ前のコミットで差分を確認
          git diff --name-only HEAD^ HEAD | grep -q "^$FILE$"

  DeployServer:
    needs: [CheckServerUpdate]
    if: needs.CheckServerUpdate.outputs.IS_UPDATE == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      REGION: asia-northeast1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_CREDENTIALS}}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{vars.GOOGLE_CLOUD_ID}}

      - name: Setup Docker authentication
        run: gcloud auth configure-docker ${{env.REGION}}-docker.pkg.dev --quiet

      - name: Verify gcloud authentication
        run: gcloud auth list

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{env.REGION}}-docker.pkg.dev/${{vars.GOOGLE_CLOUD_ID}}/${{vars.GOOGLE_CLOUD_DOCKER_REPOSITORY}}/${{vars.GOOGLE_CLOUD_RUN_NAME}}:${{github.sha}}
          docker build -t $IMAGE_TAG ./server/
          docker push $IMAGE_TAG

      - name: Deploy to Cloud Run
        run: |
          IMAGE_TAG=${{env.REGION}}-docker.pkg.dev/${{vars.GOOGLE_CLOUD_ID}}/${{vars.GOOGLE_CLOUD_DOCKER_REPOSITORY}}/${{vars.GOOGLE_CLOUD_RUN_NAME}}:${{github.sha}}
          gcloud run deploy ${{vars.GOOGLE_CLOUD_RUN_NAME}} \
            --image $IMAGE_TAG \
            --region ${{env.REGION}} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars PORT=8080 \
            --min-instances 0 \
            --max-instances 1 \
            --cpu 1 \
            --memory 512Mi \
            --concurrency 80
